

@{
    ViewData["Title"] = "Parcelas";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css" />


@await Html.PartialAsync("_ModalProcessando")
<section class="content">
    <form asp-action="index" method="get">
        <div class="row">
            <div class="col-md-12">
                <button class="btn btn-default" type="button" data-bs-toggle="collapse" data-bs-target="#filter" aria-expanded="false" aria-controls="filter">
                    <img class="icon" src="/svg/icons/filter.svg" />
                    Filtro
                </button>

                <div class="collapse mt-2" id="filter">
                    <div class="card card-primary card-outline">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-container">

                                    <select class="select2" name="idparceiro" id="idparceiro" data-placeholder="escolha um parceiro" style="width: 100%;">
                                        <option value="0">escolha um parceiro</option>
                                        @foreach (var item in ViewBag.parceiros)
                                        {
                                            if (@item.Value == ViewBag.idparceiro)
                                            {
                                                <option value="@item.Value" selected>@item.Text</option>
                                            }
                                            else
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-container">

                                    <select class="select2" name="status" id="status" data-placeholder="escolha um status" style="width: 100%;">
                                        <option value="0">Pendente</option>
                                        <option value="1">Baixada</option>
                                        <option value="2">Caixa</option>
                                        <option value="3">Todas</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-container">

                                    <select class="select2" name="forma" id="forma" data-placeholder="escolha uma forma" style="width: 100%;">
                                        <option value="0">Cartão</option>
                                        <option value="1">Boleto</option>
                                        <option value="1">Pix</option>
                                        <option value="3">Todos</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-container">    
                                    <select class="select2" name="tipodata" id="tipodata" data-placeholder="data base" style="width: 100%;">
                                        <option value="0">Vencimento</option>
                                        <option value="1">Baixa</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="row">

                            <div class="col-md-2">
                                
                                <input type="date" class="form-control" id="dtinicio" name="ini" value="@ViewBag.dtinicio">
                            </div>
                            <div class="col-md-2">
                                
                                <input type="date" class="form-control" id="dtfim" name="fim" value="@ViewBag.dtfim">
                            </div>
                            <div class="col-md-8">
                                <div class="d-flex gap-2">
                                    <input type="text" class="form-control" id="idassinatura" name="idassinatura" value="@ViewBag.idassinatura" placeholder="busque pela assinatura">
                                    <input type="text" class="form-control" id="filtro" name="filtro" value="@ViewBag.filtro" placeholder="busque pela observação ou ID da plataforma">
                                    <button type="submit" class="btn btn-md btn-default">
                                        <i class="fa fa-search"></i>
                                    </button>
                                </div>

                            </div>

                        </div>
                    </div>
                    <!-- /.card-body -->
                </div>

            </div>
        </div>
    </form>

    <h2>Parcelas</h2>

    <div class="col text-right mb-2">
        <a href="@Url.Action("Adicionar", new { acao = 1,forma=ViewBag.forma, status= ViewBag.status,tipodata=ViewBag.tipodata,ini=ViewBag.dtinicio,fim=ViewBag.dtfim,idassinatura=ViewBag.idassinatura,idparceiro=ViewBag.idparceiro})" class="btn btn-default">
            <img class="icon" src="/svg/icons/plus.svg" />
        </a>        
        
        <a href="#" class="btn btn-default" id="btnSyncGuru" title="Sincronizar Recebíveis">
            <i class="fas fa-sync-alt"></i>
        </a>
        <a href="#" class="btn btn-default" id="btnExcel" title="Exportar pro Excel">
            <i class="fas fa-file-excel"></i>
        </a>

    </div>

    <div id="jsGrid"></div>
</section>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    
    <script src='~/js/excelexportjs.js'></script>
    <script src="~/js/comuns.js"></script>

    <script>
        $(document).ready(function () {



            $('select').select2();

            $('#status').val(@ViewBag.Status).trigger('change');
            $('#forma').val(@ViewBag.Forma).trigger('change');
            $('#tipodata').val(@ViewBag.tipodata).trigger('change');


            $("#idparceiro").val("@ViewBag.idparceiro");
            $("#idassinatura").val("@ViewBag.idassinatura");
            //$('#idfazenda').trigger("change");

            $("#btnExcel").on("click", function (e) {
                e.preventDefault();
                parcelasExcel();                
            });


        });


        parcelasExcel = function () {
        
            $.ajax({
                type: "GET",
                url: "/Parcela/GetData",
                data: {
                    ini: $("input[name='ini']").val(),
                    fim: $("input[name='fim']").val(),
                    idparceiro: "@ViewBag.SelectedOptionF",
                    idassinatura: "@ViewBag.idassinatura",
                    status: @ViewBag.Status,
                    forma: @ViewBag.Forma,
                    tipodata: @ViewBag.tipodata ,
                    filtro: $("input[name='filtro']").val()
                },
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (obj) {
                    if (obj != null) {
                        parcelas = obj;
                        excelconsultanew(parcelas);
                    }
                }
            });
        }



        function excelconsultanew(parcelas) {
            const wsData = [];

            wsData.push([
                "Numero", "Valor", "Desc Plat", "Comissao",
                "Vcto", "Parceiro", "Plataforma", "Situacao", "Forma"
            ]);

            parcelas.forEach(p => {
                wsData.push([
                    p.numparcela,
                    p.valor,
                    p.descontoplataforma,
                    p.comissao,
                    p.datavencimento,
                    p.nomeparceiro,
                    p.plataforma,
                    p.status,
                    p.descforma
                ]);
            });

            const wb = XLSX.utils.book_new();
            const ws = XLSX.utils.aoa_to_sheet(wsData);
            XLSX.utils.book_append_sheet(wb, ws, "Parcelas");
            XLSX.writeFile(wb, "parcelas.xlsx");
        }



        function excelconsulta(parcelas) {

            xdata = [];

            for (var i = 0; i <= parcelas.length - 1; i++) {

                xdata.push({
                    //"Talhao": data[i].codigo,
                    "Numero": parcelas[i].numparcela,
                    "Valor": parcelas[i].valor.toLocaleString('pt-br', { style: 'decimal', maximumFractionDigits: 2 }),
                    "Desc Plat": parcelas[i].descontoplataforma.toLocaleString('pt-br', { style: 'decimal', maximumFractionDigits: 2 }),
                    "Comissao": parcelas[i].comissao.toLocaleString('pt-br', { style: 'decimal', maximumFractionDigits: 2 }),
                    "Vcto": parcelas[i].datavencimento,
                    "Parceiro": parcelas[i].nomeparceiro,
                    "Plataforma": parcelas[i].plataforma,
                    "Situacao": parcelas[i].status,
                    "Forma": parcelas[i].descforma

                })
            }
           try { 
               $("#jsGrid").excelexportjs({
                    containerid: "jsGrid"
                    , datatype: 'json'
                    , dataset: xdata
                    , columns: getColumns(xdata)
                });
           } 
           catch (ex) 
           {
            console.error("Erro durante exportação:", ex);
            alert("Erro durante exportação: " + ex.message);
           }


        }


        function mostrarProcessando() {
            const modal = new bootstrap.Modal(document.getElementById("modalProcessando"), {
                backdrop: 'static',
                keyboard: false
            });
            modal.show();
            window.modalRefProcessando = modal;
        }

        function esconderProcessando() {
            if (window.modalRefProcessando) {
                window.modalRefProcessando.hide();
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            const btnSync = document.getElementById("btnSyncGuru");
            if (btnSync) {
                btnSync.addEventListener("click", function (e) {
                    e.preventDefault();

                    atualizarTextoModalProcessando("Processando Pagarme...","Favor aguardar");
                    mostrarProcessando();

                    const hoje = formatarData(new Date());
                    var ontem = new Date();
                    ontem.setDate(ontem.getDate() - 1);
                    ontem = formatarData(ontem);

                    url = "/ParametrosGuru/GetBaixasPagarmeByData?ini="+ontem+"&fim="+hoje+"&connectionId=null";

                    fetch(url, {
                        method: "GET"
                    })
                        .then(resp => {
                            if (!resp.ok) throw new Error("Erro ao sincronizar com o Pagarme.");
                            return resp.json();
                        })
                        .then(data => {
                            esconderProcessando();
                            alert("Sincronização Pagarme concluída!");
                            // Opcional: location.reload(); para recarregar dados
                        })
                        .catch(err => {
                            esconderProcessando();
                            alert("Erro: " + err.message);
                        });


                    url = "/ParametrosGuru/GetBaixasAsaasByData?ini=" + ontem + "&fim=" + hoje + "&connectionId=null";
                    atualizarTextoModalProcessando("Processando AsaaS...", "Favor aguardar");
                    fetch(url, {
                        method: "GET"
                    })
                        .then(resp => {
                            if (!resp.ok) throw new Error("Erro ao sincronizar com o Asaas.");
                            return resp.json();
                        })
                        .then(data => {
                            esconderProcessando();
                            alert("Sincronização Asaas concluída!");
                            Opcional: location.reload(); 
                        })
                        .catch(err => {
                            esconderProcessando();
                            alert("Erro: " + err.message);
                        });
                });
            }
        });

            $("#jsGrid").jsGrid({
                width: "100%",
                height: "400px",
                sorting: true,
                paging: true,
                pageSize: 10,
                pageButtonCount: 5,
                autoload: true,
                pagePrevText: "Anterior",
                pageNextText: "Próximo",
                pageFirstText: "Primeira",
                pageLastText: "Última",
                noDataContent: "<div class='custom-no-data'>Nenhuma parcela encontrada</div>",
                controller: {
                    loadData: function () {
                        return $.ajax({
                            type: "GET",
                            url: "/Parcela/GetData",
                            data: {
                                ini: $("input[name='ini']").val(),
                                fim: $("input[name='fim']").val(),
                                idparceiro: "@ViewBag.idparceiro",
                                idassinatura: "@ViewBag.idassinatura",
                                status: @ViewBag.Status,
                                forma: @ViewBag.Forma,
                                tipodata: @ViewBag.tipodata ,
                                filtro: $("input[name='filtro']").val()
                            },
                            dataType: "json"
                        });
                    }
                },
                fields: [
                    { name: "numparcela", type: "text", title: "Num", width: 10 },
                    { name: "valor", type: "number", title: "Valor", width: 20,
                    headerTemplate: function () {
                        return $("<div>").text("Valor").css("text-align", "right");
                    },

                    itemTemplate: function (value) {
                        return parseFloat(value).toLocaleString("pt-BR", {
                            minimumFractionDigits: 2,
                            maximumFractionDigits: 2
                        });
                    }
                    },

                {
                    name: "descontoplataforma", type: "number", title: "Valor", width: 25,
                    headerTemplate: function () {
                        return $("<div>").text("Desc Plataforma").css("text-align", "right");
                    },

                    itemTemplate: function (value) {
                        return parseFloat(value).toLocaleString("pt-BR", {
                            minimumFractionDigits: 2,
                            maximumFractionDigits: 2
                        });
                    }
                },

                {
                    name: "comissao", type: "number", title: "Valor", width: 25,
                    headerTemplate: function () {
                        return $("<div>").text("Comissão").css("text-align", "right");
                    },

                    itemTemplate: function (value) {
                        return parseFloat(value).toLocaleString("pt-BR", {
                            minimumFractionDigits: 2,
                            maximumFractionDigits: 2
                        });
                    }
                },


                    { name: "datavencimento", type: "text", title: "Vencimento", width: 25,
                    itemTemplate: function (value) {
                        const data = new Date(value);
                        const dia = String(data.getDate()).padStart(2, '0');
                        const mes = String(data.getMonth() + 1).padStart(2, '0');
                        const ano = String(data.getFullYear()).slice(2); // apenas 2 dígitos
                        return `${dia}/${mes}/${ano}`;
                    }
                },
                { name: "nomeparceiro", type: "text", title: "Parceiro", width: 80 },
                    { name: "status", type: "text", title: "Status", width: 20 },
                    { name: "descforma", type: "text", title: "Forma Pag", width: 20 },
                {
                    name: "dataestimadapagto", type: "text", title: "Data Estimada", width: 28,
                    itemTemplate: function (value) {
                        const data = new Date(value);
                        if (data.toLocaleDateString()!="31/12/2500"){
                        const dia = String(data.getDate()).padStart(2, '0');
                        const mes = String(data.getMonth() + 1).padStart(2, '0');
                        const ano = String(data.getFullYear()).slice(0); // apenas 2 dígitos
                        return `${dia}/${mes}/${ano}`;}
                        else {
                            return " ";
                        }
                    }
                },
                    {
                        type: "control",
                        itemTemplate: function (_, item) {
                            var $result = $("<div>").addClass("dropdown");

                            var $button = $("<button>").addClass("btn btn-default dropdown-toggle")
                                .attr("type", "button")
                                .attr("data-bs-toggle", "dropdown")
                                .text("Ações");

                            var $menu = $("<div>").addClass("dropdown-menu");

                            var $edit = $("<a>").addClass("dropdown-item")
                            .attr("href", "/Parcela/Adicionar?id=" + item.id + "&acao=2&idassinatura=@ViewBag.idassinatura&idparceiro=@ViewBag.idparceiro&forma=@ViewBag.forma&status=@ViewBag.status&ini=@ViewBag.dtinicio&fim=@ViewBag.dtfim")
                                .text("Editar");

                            var $delete = $("<a>").addClass("dropdown-item")
                            .attr("href", "/Parcela/Adicionar?id=" + item.id + "&acao=3&idassinatura=@ViewBag.idassinatura&idparceiro=@ViewBag.idparceiro&forma=@ViewBag.forma&status=@ViewBag.status&ini=@ViewBag.dtinicio&fim=@ViewBag.dtfim")
                                .text("Excluir");

                            $menu.append($edit).append($delete);
                            $result.append($button).append($menu);

                            return $result;
                        },
                    },
                    {
                        type: "control",
                        
                            itemTemplate: function (_, item) {
                            var link = $("<a>")
                                .addClass("btn btn-sm btn-success")
                                .attr("href", "/movimentocaixa/adicionar?acao=4&id=" + item.idcaixa)
                                .attr("title", "Ir para Movimento de Caixa");

                            var icon = $("<i>")
                                .addClass("fas fa-money-bill-wave");

                            link.append(icon);
                            return link;
                        }
                    }
                ]
            });

        

        
    </script>
}
