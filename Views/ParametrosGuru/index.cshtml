@model ADUSClient.ParametrosGuruViewModel;

@{
    if (ViewBag.idplataforma == 1)
    {
        ViewData["Title"] = "Integração  Guru";
    }
    if (ViewBag.idplataforma == 2)
    {
        ViewData["Title"] = "Integração ASAAS";
    }
    if (ViewBag.idplataforma == 3)
    {
        ViewData["Title"] = "Integração Pagarme";
    }

}

<div class="container-fluid mt-3">
    <h3 class="mb-3">@ViewData["Title"]</h3>

    <ul class="nav nav-tabs" id="parametrosTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="edit-tab" data-bs-toggle="tab" data-bs-target="#edit" type="button" role="tab">Parâmetros</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="import-tab" data-bs-toggle="tab" data-bs-target="#import" type="button" role="tab">Importar Dados</button>
        </li>
    </ul>

    <div class="tab-content border p-3 shadow-sm bg-white" id="parametrosTabsContent">
        <!-- Aba de Edição -->
        <div class="tab-pane fade show active" id="edit" role="tabpanel">
            <form asp-action="Editar" method="post" novalidate>
                <input type="hidden" asp-for="id" />

                @if (ViewBag.idplataforma == 1)
                {
                    <div class="mb-3">
                        <label asp-for="token" class="form-label fw-bold"></label>
                        <input asp-for="token" class="form-control" readonly/>
                        <span asp-validation-for="token" class="text-danger small"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="ultdata" class="form-label fw-bold"></label>
                        <input asp-for="ultdata" type="date" class="form-control" />
                        <span asp-validation-for="ultdata" class="text-danger small"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="urlsub" class="form-label fw-bold"></label>
                        <input asp-for="urlsub" class="form-control" />
                        <span asp-validation-for="urlsub" class="text-danger small"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="urltransac" class="form-label fw-bold"></label>
                        <input asp-for="urltransac" class="form-control" />
                        <span asp-validation-for="urltransac" class="text-danger small"></span>
                    </div>
                }

                @if (ViewBag.idplataforma != 1)
                {
                    <div class="row">
                        <div class="mb-3">
                            <label asp-for="token" class="form-label fw-bold"></label>
                            <input asp-for="token" class="form-control" readonly />
                            <span asp-validation-for="token" class="text-danger small"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ultdata" class="form-label fw-bold"></label>
                            <input asp-for="ultdata" type="date" class="form-control" />
                            <span asp-validation-for="ultdata" class="text-danger small"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="urltransac" class="form-label fw-bold">URL Pagamentos</label>
                            <input asp-for="urltransac" class="form-control" />
                            <span asp-validation-for="urltransac" class="text-danger small"></span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <label asp-for="idtransacao" class="form-label fw-bold">Transação</label>
                            <select asp-for="idtransacao" class="form-control" asp-items="ViewBag.Transacoes"></select>
                        </div>

                        <div class="col-md-4">
                            <label asp-for="idccusto" class="form-label fw-bold">Centro de Custo</label>
                            <select asp-for="idccusto" class="form-control" asp-items="ViewBag.CentroCustos"></select>
                        </div>

                        <div class="col-md-4">
                            <label asp-for="idconta" class="form-label fw-bold">Conta Corrente</label>
                            <select asp-for="idconta" class="form-control" asp-items="ViewBag.Contas"></select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <label asp-for="idcategoria" class="form-label fw-bold">Categoria</label>
                            <select asp-for="idcategoria" class="form-control" asp-items="ViewBag.Categorias"></select>
                        </div>
                        <div class="col-md-8">
                            <label asp-for="idparceiro" class="form-label fw-bold">Parceiro</label>
                            <select asp-for="idparceiro" class="form-control" asp-items="ViewBag.Parceiros"></select>
                        </div>

                    </div>
                

                }

                <div class="text-end mt-3">
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-save me-1"></i> Salvar
                    </button>
                </div>
            </form>
        </div>

        <!-- Aba de Importação -->
        <div class="tab-pane fade" id="import" role="tabpanel">
            <form asp-action="Importar" method="post" id="formImportar">
                <div class="row mb-3">
                    <div class="col-md-4">
                        <label class="form-label fw-bold">Data Inicial</label>
                        <input type="date" name="dataInicio" class="form-control" required />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label fw-bold">Data Final</label>
                        <input type="date" name="dataFim" class="form-control" required />
                    </div>
                    <div class="col-md-4 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary w-100" id="btnImportar" >
                            <i class="fas fa-download me-1"></i> Importar Dados
                        </button>
                    </div>
                </div>

                <input type="hidden" id="connectionId" name="connectionId" value="abc"  />

                <div id="progressContainer" class="mt-4" style="display: none;">
                    <label class="form-label">Progresso da Importação</label>
                    <div class="progress">
                        <div id="progressBar" class="progress-bar progress-bar-striped progress-bar-animated"
                             role="progressbar" style="width: 0%">
                            0%
                        </div>
                    </div>
                </div>

                <div class="mt-3">
                    <label class="form-label fw-bold">Registros com erro</label>
                    <div id="logArea" class="form-control" style="height: 200px; overflow-y: auto; background-color: #f8f9fa; font-family: monospace; white-space: pre-wrap;"></div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Font Awesome (caso não esteja no layout) -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />

<style>
    #progressBar.bg-success {
        background-color: #28a745 !important;
    }
</style>


@section Scripts {
    <script>
        let connectionIdReady = false;
        let formImportar;

        window.addEventListener("load", function () {
            formImportar = document.getElementById("formImportar");

            const script = document.createElement('script');
            script.src = "https://cdn.jsdelivr.net/npm/@@microsoft/signalr@7.0.5/dist/browser/signalr.min.js";
            script.onload = function () {

                const connection = new signalR.HubConnectionBuilder()
                    .withUrl("/hub/importProgress")
                    .build();

                connection.start()
                    .then(() => {
                        const id = connection.connectionId;
                        console.log("📡 Connection ID (alternativo):", id);
                        document.getElementById("connectionId").value = id;
                        connectionIdReady = true;
                    })
                    .catch(err => {
                        console.error("❌ Erro ao conectar com SignalR:", err);
                    });

                connection.on("ReceiveProgress", function (percent) {
                    progressBar.style.width = percent + "%";
                    progressBar.innerText = percent + "%";

                    if (percent > 0) {
                        progressContainer.style.display = 'block';
                    }

                    if (percent >= 100) {
                        setTimeout(() => {
                            progressBar.classList.remove("progress-bar-animated");
                            progressBar.innerText = "✔ Importação concluída!";
                            progressBar.classList.add("bg-success");
                        }, 500);
                    }
                });

                connection.on("ReceiveLog", function (mensagem) {
                    const logArea = document.getElementById("logArea");
                    logArea.innerText += mensagem + "\n";
                    logArea.scrollTop = logArea.scrollHeight; // Scroll automático
                });

                formImportar.addEventListener('submit', function (e) {
                    /*
                    if (!connectionIdReady) {
                        e.preventDefault();
                        alert("Aguardando conexão com o servidor...");
                        return false;
                    }*/

                    e.preventDefault(); // impede redirecionamento tradicional

                    const currentId = document.getElementById("connectionId").value;
                    const dataInicio = formImportar.querySelector("input[name='dataInicio']").value;
                    const dataFim = formImportar.querySelector("input[name='dataFim']").value;

                                        
                    console.log("🔵 Enviando formulário com connectionId:", currentId);

                    progressContainer.style.display = "block";
                    progressBar.style.width = "0%";
                    progressBar.classList.remove("bg-success");
                    progressBar.classList.add("progress-bar-animated");
                    progressBar.innerText = "0%";
                     url="";
                    if (@ViewBag.idplataforma==1)
                    {
                         url = `/ParametrosGuru/Importar?dataInicio=${encodeURIComponent(dataInicio)}&dataFim=${encodeURIComponent(dataFim)}&connectionId=${encodeURIComponent(currentId)}`;
                    }
                    if (@ViewBag.idplataforma== 2) 
                    {
                         url = `/ParametrosGuru/GetBaixasAsaasByData?ini=${encodeURIComponent(dataInicio)}&fim=${encodeURIComponent(dataFim)}&connectionId=${encodeURIComponent(currentId)}`;
                    }
                    if (@ViewBag.idplataforma== 3) {
                         url = `/ParametrosGuru/GetBaixasPagarmeByData?ini=${encodeURIComponent(dataInicio)}&fim=${encodeURIComponent(dataFim)}&connectionId=${encodeURIComponent(currentId)}`;
                    }

                    fetch(url, {
                        method: "POST"
                    }).then(resp => {
                        if (!resp.ok) {
                            throw new Error("Erro durante a importação.");
                        }
                    }).catch(err => {
                        progressBar.classList.remove("progress-bar-animated");
                        progressBar.classList.add("bg-danger");
                        progressBar.innerText = "Erro";
                        importMessage.className = "alert alert-danger";
                        importMessage.innerText = "Erro ao importar: " + err.message;
                        importMessage.style.display = "block";
                    });
                });
            };
            document.head.appendChild(script);
        });
    </script>
}