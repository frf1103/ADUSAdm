@model ADUSClient.Assinatura.CheckoutViewModel
@{
    ViewData["Title"] = "Checkout Mobile - Teca Social";
    Layout = "_LayoutCheckout";
}

<!-- Layout responsivo e otimizado para mobile -->
<style>
    body.ios-device input {
        font-size: 16px;
    }
    body.android-device .form-control {
        border-radius: 0.375rem;
    }
    @@media (max-width: 576px) {
        input, select, button {
            font-size: 1rem !important;
        }
        .container-fluid {
            padding: 0 10px;
        }
        .form-control, .form-select {
            width: 100% !important;
        }
     }
    .qty-group .qty-input {
      max-width: 110px; /* garante que caiba confortavelmente no mobile */
    }
    .qty-btn {
      min-width: 38px;  /* alvos de toque maiores */
    }
    @@media (max-width: 576px) {
      .qty-group .qty-input { max-width: 100px; }
    }

</style>

<div class="container-fluid px-2">
    <div class="row">
        <div class="col-12 text-center bg-light py-3">
            <img loading="lazy" src="~/images/tecasocial.webp" class="img-fluid mb-2" style="max-height: 120px;">
            <h6 class="fw-bold mb-1">Teca Social - Tectona Grandis</h6>
            <p class="mb-0 text-muted" id="texto1">
                Assinatura
            </p>
            <p class="mb-0" id="texto2">R$ 47,00 cada</p>
            <p class="mb-0" id="texto3"></p>
            <div class="my-2">
                <label for="Qtd" class="form-label mb-1">Qtd:</label>
                <div class="input-group justify-content-center qty-group">
                    <button type="button"
                            class="btn btn-outline-secondary btn-sm qty-btn"
                            onclick="alterarQtd(-1)"
                            aria-label="Diminuir quantidade">
                        −
                    </button>

                    <input type="number"
                           name="Qtd"
                           id="Qtd"
                           min="1"
                           step="1"
                           value="1"
                           inputmode="numeric"
                           pattern="[0-9]*"
                           class="form-control text-center qty-input w-50"
                           onchange="atualizarValor()"
                           oninput="atualizarValor()">

                    <button type="button"
                            class="btn btn-outline-secondary btn-sm qty-btn"
                            onclick="alterarQtd(1)"
                            aria-label="Aumentar quantidade">
                        +
                    </button>
                </div>
            </div>

           <p class="fw-bold fs-5 mt-2">
            TOTAL: <span id="valorTotal">R$ 47,00</span>
            </p>
            <p class="text-muted small" id="textoCobranca">
                Cobrada a cada 1 mês<br>Automaticamente por 84 meses
            </p>
        </div>

        <div class="col-12 p-3">
            <form asp-action="Processando" method="post" id="checkoutForm">
                @Html.AntiForgeryToken()

                <p class="small text-muted">
                    🌳 Preencha seus dados para ajudar a educação infantil. Quanto mais árvores, mais impacto!
                </p>

                <input asp-for="Nome" class="form-control mb-2" placeholder="Nome completo *" value="@ViewBag.nome" required />
                <input asp-for="cpfCnpj" id="cpfCnpj" class="form-control mb-2" placeholder="CPF ou CNPJ *" />
                <input asp-for="Email" class="form-control mb-2" placeholder="E-mail *" type="email" value="@ViewBag.email" required />
                <input asp-for="EmailConfirmacao" class="form-control mb-2" placeholder="Confirme o e-mail *" type="email" required />

                <div class="row g-2 mb-2">
                    <div class="col-4">
                        <select asp-for="Ddi" class="form-select">
                            <option value="55">+55</option>
                            <option value="1">+1</option>
                        </select>
                    </div>
                    <div class="col-8">
                        <input asp-for="Telefone" class="form-control" placeholder="Celular *" value="@ViewBag.fone" required pattern="\d{9,15}" />
                    </div>
                </div>

                <input asp-for="Cep" class="form-control mb-2" id="cep" placeholder="CEP *" onchange="buscarEndereco()" required pattern="\d{8}" />
                <input asp-for="Logradouro" id="logradouro" class="form-control mb-2" placeholder="Logradouro" />
                <input asp-for="Numero" class="form-control mb-2" placeholder="Número *" required />
                <input asp-for="Complemento" class="form-control mb-2" placeholder="Complemento" />
                <input asp-for="Bairro" id="bairro" class="form-control mb-2" placeholder="Bairro" />
                <input asp-for="Cidade" id="cidade" class="form-control mb-2" placeholder="Cidade" />
                <input asp-for="Estado" id="estado" class="form-control mb-2" placeholder="Estado" />

                <select asp-for="FormaPagamento" class="form-select mb-2" onchange="mostrarParcelas(this.value)" required>
                    <option value="Recorrente">Cartão (Recorrente)</option>
                    <option value="Parcelado">Cartão (Parcelado)</option>
                    <option value="Boleto">Boleto</option>
                </select>

                <div id="parcelas" style="display:none;" class="mb-2">
                    <select asp-for="Parcelas" id="comboParcelas" class="form-select"></select>
                </div>

                <div id="vencimentoBoleto" class="mb-2" style="display:none;">
                    <input type="date" id="dataVencimento" name="dataVencimento" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                </div>

                <div id="cartaoFields">
                    <input asp-for="NumeroCartao" class="form-control mb-2" placeholder="Número do Cartão *" pattern="\d{13,19}" />
                    <input asp-for="NomeTitular" class="form-control mb-2" placeholder="Nome no Cartão *" />
                    <div class="row g-2 mb-2">
                        <div class="col-6">
                            <input asp-for="Validade" class="form-control" id="validadeCartao" placeholder="Validade * (MM/AAAA)" pattern="(0[1-9]|1[0-2])/\d{4}" />
                        </div>
                        <div class="col-6">
                            <input asp-for="Cvv" class="form-control" placeholder="CVV *" pattern="\d{3,4}" />
                        </div>
                    </div>
                    <input asp-for="QuantidadeArvores" type="text" class="form-control" hidden />
                </div>

                <button type="button" class="btn btn-success w-100 mt-3" onclick="if(validarFormulario()) mostrarModalProcessando()">Confirmar Pagamento</button>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="modalProcessando" tabindex="-1" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content text-center p-4">
            <div class="spinner-border text-success" role="status"></div>
            <p class="mt-3 mb-0">Processando pagamento...</p>
        </div>
    </div>
</div>

@section Scripts {

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
<script>
    
    function mostrarModalProcessando() {
        const modal = new bootstrap.Modal(document.getElementById('modalProcessando'));
        modal.show();
        setTimeout(() => {
            document.getElementById('checkoutForm').submit();
        }, 1000);
    }

    function validarFormulario() {
        const email = document.querySelector('[name="Email"]').value;
        const emailConf = document.querySelector('[name="EmailConfirmacao"]').value;
        if (email !== emailConf) {
            alert("Os e-mails não coincidem.");
            return false;
        }
        const qtd = parseInt(document.querySelector('[name="Qtd"]')?.value || 0);
        if (qtd <= 0) {
            alert("A quantidade de árvores deve ser maior que zero.");
            return false;
        }

        const cpfCnpj = document.querySelector('[name="CpfCnpj"]');
        if (cpfCnpj) {
            const valor = cpfCnpj.value.replace(/\D/g, "");
            if (!(valor.length === 11 || valor.length === 14)) {
                alert("Informe um CPF com 11 dígitos ou CNPJ com 14 dígitos.");
                return false;
            }
        }  
        x=document.getElementById("QuantidadeArvores");
        x.value=qtd;

        return true;
    }
    
    function atualizarValor() {
        const qtd = parseInt(document.querySelector('[name="Qtd"]')?.value || 1);
        const totalEl = document.getElementById("valorTotal");
        const textoCobranca = document.getElementById("textoCobranca");
        const forma = document.querySelector('[name="FormaPagamento"]')?.value;
        let total = qtd * 47;
        if (totalEl) totalEl.innerText = `R$ ${total.toFixed(2).replace('.', ',')}`;
            gerarParcelas(total);
        mostrarParcelas(forma);

     }
        function mostrarParcelas(valor) {

            const qtd = parseInt(document.querySelector('[name="Qtd"]')?.value || 1);
            const totalEl = document.getElementById("valorTotal");
            const textoCobranca = document.getElementById("textoCobranca");
            const texto1 = document.getElementById("texto1");
            const texto2 = document.getElementById("texto2");
            const texto3 = document.getElementById("texto3");
            total = qtd * 47;
            tot1 = qtd * 47;

            const forma = valor;
            if (forma === "Parcelado") {
                const qtd = parseInt(document.querySelector('[name="Qtd"]')?.value || 1);

                let total = qtd * 47;
                total *= 84;
                const valorParcela = total / 21;
                let vlarvore = 47 * 84;
                if (totalEl) totalEl.innerText = `R$ ${total.toFixed(2).replace('.', ',')}`;
                if (textoCobranca) textoCobranca.innerText = `Parcelado em até 21x de R$ ${valorParcela.toFixed(2).replace('.', ',')}`;
                if (texto1) texto1.innerText = 'Valor de cada Árvore Teca';
                if (texto2) texto2.innerText = `R$ ${vlarvore.toFixed(2).replace('.', ',')}`;
                if (texto3) texto3.innerHTML = '';

            } else if (forma === "Boleto") {
                let totalgeral = total * 84;
                let vlarvore = 47 * 84;

                if (totalEl) totalEl.innerText = `R$ ${totalgeral.toFixed(2).replace('.', ',')}`;
                if (textoCobranca) textoCobranca.innerText = `Parcele no Boleto em 84 vezes de R$ ${total.toFixed(2).replace('.', ',')}`;
                if (texto1) texto1.innerText = 'Valor de cada Árvore Teca';
                if (texto2) texto2.innerText = `R$ ${vlarvore.toFixed(2).replace('.', ',')}`;
                if (texto3) texto3.innerHTML = '';

            } else { // Recorrente
                let vlarvore = 47;
                let total = vlarvore * 84;
                let totalgeral = tot1 * 84;
                let parcela=totalgeral/84;
                if (totalEl) totalEl.innerText = `R$ ${totalgeral.toFixed(2).replace('.', ',')}`;
                if (textoCobranca) textoCobranca.innerHTML = 'PARCELE EM 84 VEZES DE R$ ' + parcela.toFixed(2).replace('.', ',');
                if (texto1) texto1.innerText = 'Valor  de cada Árvore Teca';
                if (texto2) texto2.innerText = `R$ ${total.toFixed(2).replace('.', ',')}`;
                if (texto3) texto3.innerHTML = `Parcele em 84 vezes no cartão de crédito sem juros<br>Parcela recorrente sem comprometer o limite do cartão`;

            }

            const isCartao = valor === "Recorrente" || valor === "Parcelado";
            document.getElementById("parcelas").style.display = valor === "Parcelado" ? "block" : "none";


            document.getElementById("cartaoFields").style.display = isCartao ? "block" : "none";
            document.getElementById("vencimentoBoleto").style.display = valor === "Boleto" ? "block" : "none";
        }

        function gerarParcelas(valorTotal) {
        let combo = document.getElementById("comboParcelas");
        combo.innerHTML = "";
        for (let i = 1; i <= 21; i++) {
            let valorParcela = (84*valorTotal / i).toFixed(2);
            let opt = document.createElement("option");
            opt.value = i;
            opt.text = `${i}x de R$${valorParcela.replace('.', ',')}`;
            combo.appendChild(opt);
            
        }
    }
    async function buscarEndereco() {
        const cep = document.getElementById("cep").value.replace(/\D/g, "");
        if (cep.length !== 8) return;
        try {
            const res = await fetch(`https://viacep.com.br/ws/${cep}/json/`);
            const data = await res.json();
            if (data.erro) return alert("CEP não encontrado.");
            const logradouro = document.getElementById("logradouro");
            const bairro = document.getElementById("bairro");
            const cidade = document.getElementById("cidade");
            const estado = document.getElementById("estado");
            if (logradouro) logradouro.value = data.logradouro || "";
            if (bairro) bairro.value = data.bairro || "";
            if (cidade) cidade.value = data.localidade || "";
            if (estado) estado.value = data.uf || "";
        } catch (error) {
            console.error("Erro ao buscar o CEP:", error);
            alert("Erro ao buscar o CEP.");
        }
    }
    document.addEventListener("DOMContentLoaded", () => {
        atualizarValor();
        const forma = document.querySelector('[name="FormaPagamento"]');
        if (forma) mostrarParcelas(forma.value);

        const cpfCnpjInput = document.getElementById("cpfCnpj");
        if (cpfCnpjInput) {
            cpfCnpjInput.addEventListener("input", () => {
                let val = cpfCnpjInput.value.replace(/\D/g, "");
                if (val.length <= 11) {
                    val = val.replace(/(\d{3})(\d)/, "$1.$2").replace(/(\d{3})(\d)/, "$1.$2").replace(/(\d{3})(\d{1,2})$/, "$1-$2");
                } else {
                    val = val.replace(/(\d{2})(\d)/, "$1.$2").replace(/(\d{3})(\d)/, "$1.$2").replace(/(\d{3})(\d{4})(\d{2})$/, "$1/$2-$3");
                }
                cpfCnpjInput.value = val;
            });
        }

        const validade = document.getElementById("validadeCartao");
        if (validade) {
            validade.addEventListener("input", () => {
                let v = validade.value.replace(/[^\d]/g, "");
                if (v.length >= 2) {
                    v = v.slice(0, 6).replace(/(\d{2})(\d{0,4})/, "$1/$2");
                }
                validade.value = v;
            });
        }
    });

        function alterarQtd(delta) {
            const qtdEl = document.getElementById("Qtd");
            let atual = parseInt(qtdEl.value || "1", 10);
            if (isNaN(atual)) atual = 1;

            let novo = atual + delta;
            if (novo < 1) novo = 1;

            qtdEl.value = novo;
            atualizarValor();
        }

</script>

}