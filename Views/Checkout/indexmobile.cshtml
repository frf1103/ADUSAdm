@model ADUSClient.Assinatura.CheckoutViewModel
@{
    ViewData["Title"] = "Checkout Mobile - Teca Social";
    Layout = "_LayoutCheckout";
}

<!-- Layout responsivo e otimizado para mobile -->
<style>
    body.ios-device input {
        font-size: 16px;
    }
    body.android-device .form-control {
        border-radius: 0.375rem;
    }
    @@media (max-width: 576px) {
        input, select, button {
            font-size: 1rem !important;
        }
        .container-fluid {
            padding: 0 10px;
        }
        .form-control, .form-select {
            width: 100% !important;
        }
    }
</style>

<div class="container-fluid px-2">
    <div class="row">
        <div class="col-12 text-center bg-light py-3">
            <img loading="lazy" src="~/images/tecasocial.webp" class="img-fluid mb-2" style="max-height: 120px;">
            <h6 class="fw-bold mb-1">Teca Social - Tectona Grandis</h6>
            <small class="text-muted">Assinatura mensal</small>
            <p class="mb-0">R$ 47,00 por árvore</p>
            <div class="my-2">
                <label for="quantidade" class="form-label mb-0">Qtd:</label>
                <input type="number" name="Qtd" id="Qtd" min="1" value="1" class="form-control w-75 mx-auto text-center" onchange="atualizarValor()">
            </div>
            <p class="fw-bold">TOTAL: <span id="valorTotal">R$ 47,00</span></p>
        </div>

        <div class="col-12 p-3">
            <form asp-action="Processando" method="post" id="checkoutForm">
                @Html.AntiForgeryToken()

                <p class="small text-muted">
                    🌳 Preencha seus dados para ajudar a educação infantil. Quanto mais árvores, mais impacto!
                </p>

                <input asp-for="Nome" class="form-control mb-2" placeholder="Nome completo *" value="@ViewBag.nome" required />
                <input asp-for="cpfCnpj" id="cpfCnpj" class="form-control mb-2" placeholder="CPF ou CNPJ *" />
                <input asp-for="Email" class="form-control mb-2" placeholder="E-mail *" type="email" value="@ViewBag.email" required />
                <input asp-for="EmailConfirmacao" class="form-control mb-2" placeholder="Confirme o e-mail *" type="email" required />

                <div class="row g-2 mb-2">
                    <div class="col-4">
                        <select asp-for="Ddi" class="form-select">
                            <option value="55">+55</option>
                            <option value="1">+1</option>
                        </select>
                    </div>
                    <div class="col-8">
                        <input asp-for="Telefone" class="form-control" placeholder="Celular *" value="@ViewBag.fone" required pattern="\d{9,15}" />
                    </div>
                </div>

                <input asp-for="Cep" class="form-control mb-2" id="cep" placeholder="CEP *" onchange="buscarEndereco()" required pattern="\d{8}" />
                <input asp-for="Logradouro" id="logradouro" class="form-control mb-2" placeholder="Logradouro" />
                <input asp-for="Numero" class="form-control mb-2" placeholder="Número *" required />
                <input asp-for="Complemento" class="form-control mb-2" placeholder="Complemento" />
                <input asp-for="Bairro" id="bairro" class="form-control mb-2" placeholder="Bairro" />
                <input asp-for="Cidade" id="cidade" class="form-control mb-2" placeholder="Cidade" />
                <input asp-for="Estado" id="estado" class="form-control mb-2" placeholder="Estado" />

                <select asp-for="FormaPagamento" class="form-select mb-2" onchange="mostrarParcelas(this.value)" required>
                    <option value="Recorrente">Cartão (Recorrente)</option>
                    <option value="Parcelado">Cartão (Parcelado)</option>
                    <option value="Boleto">Boleto</option>
                </select>

                <div id="parcelas" style="display:none;" class="mb-2">
                    <select asp-for="Parcelas" id="comboParcelas" class="form-select"></select>
                </div>

                <div id="vencimentoBoleto" class="mb-2" style="display:none;">
                    <input type="date" id="dataVencimento" name="dataVencimento" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                </div>

                <div id="cartaoFields">
                    <input asp-for="NumeroCartao" class="form-control mb-2" placeholder="Número do Cartão *" pattern="\d{13,19}" />
                    <input asp-for="NomeTitular" class="form-control mb-2" placeholder="Nome no Cartão *" />
                    <div class="row g-2 mb-2">
                        <div class="col-6">
                            <input asp-for="Validade" class="form-control" id="validadeCartao" placeholder="Validade * (MM/AAAA)" pattern="(0[1-9]|1[0-2])/\d{4}" />
                        </div>
                        <div class="col-6">
                            <input asp-for="Cvv" class="form-control" placeholder="CVV *" pattern="\d{3,4}" />
                        </div>
                    </div>
                    <input asp-for="QuantidadeArvores" type="text" class="form-control" hidden />
                </div>

                <button type="button" class="btn btn-success w-100 mt-3" onclick="if(validarFormulario()) mostrarModalProcessando()">Confirmar Pagamento</button>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="modalProcessando" tabindex="-1" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content text-center p-4">
            <div class="spinner-border text-success" role="status"></div>
            <p class="mt-3 mb-0">Processando pagamento...</p>
        </div>
    </div>
</div>

@section Scripts {

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
    <script defer>
        function validarFormulario() {
            const email = document.querySelector('[name="Email"]').value;
            const emailConf = document.querySelector('[name="EmailConfirmacao"]').value;
            if (email !== emailConf) {
                alert("Os e-mails não coincidem.");
                return false;
            }
            const qtd = parseInt(document.querySelector('[name="Qtd"]')?.value || 0);
            if (qtd <= 0) {
                alert("A quantidade de árvores deve ser maior que zero.");
                return false;
            }

            const cpfCnpj = document.querySelector('[name="CpfCnpj"]');
            if (cpfCnpj) {
                const valor = cpfCnpj.value.replace(/\D/g, "");
                if (!(valor.length === 11 || valor.length === 14)) {
                    alert("Informe um CPF com 11 dígitos ou CNPJ com 14 dígitos.");
                    return false;
                }
            }
            let x = document.getElementById("QuantidadeArvores");
            if (x) x.value = qtd;
            return true;
        }

        function atualizarValor() {
            const qtd = parseInt(document.querySelector('[name="Qtd"]')?.value || 1);
            const total = qtd * 47;
            const totalEl = document.getElementById("valorTotal");
            if (totalEl) totalEl.innerText = `R$ ${total.toFixed(2).replace('.', ',')}`;
            gerarParcelas(total);
        }

        function mostrarParcelas(valor) {
            const isCartao = valor === "Recorrente" || valor === "Parcelado";
            document.getElementById("parcelas").style.display = valor === "Parcelado" ? "block" : "none";
            document.getElementById("cartaoFields").style.display = isCartao ? "block" : "none";
            document.getElementById("vencimentoBoleto").style.display = valor === "Boleto" ? "block" : "none";
        }

        function mostrarModalProcessando() {
            const modal = new bootstrap.Modal(document.getElementById('modalProcessando'));
            modal.show();
            setTimeout(() => {
                document.getElementById('checkoutForm').submit();
            }, 1000);
        }


        function gerarParcelas(valorTotal) {
            let combo = document.getElementById("comboParcelas");
            combo.innerHTML = "";
            for (let i = 1; i <= 21; i++) {
                let valorParcela = (84 * valorTotal / i).toFixed(2);
                let opt = document.createElement("option");
                opt.value = i;
                opt.text = `${i}x de R$${valorParcela.replace('.', ',')}`;
                combo.appendChild(opt);
            }
        }

        async function buscarEndereco() {
            const cep = document.getElementById("cep").value.replace(/\D/g, "");
            if (cep.length !== 8) return;
            try {
                const res = await fetch(`https://viacep.com.br/ws/${cep}/json/`);
                const data = await res.json();
                if (data.erro) return alert("CEP não encontrado.");
                const logradouro = document.getElementById("logradouro");
                const bairro = document.getElementById("bairro");
                const cidade = document.getElementById("cidade");
                const estado = document.getElementById("estado");
                if (logradouro) logradouro.value = data.logradouro || "";
                if (bairro) bairro.value = data.bairro || "";
                if (cidade) cidade.value = data.localidade || "";
                if (estado) estado.value = data.uf || "";
            } catch (error) {
                console.error("Erro ao buscar o CEP:", error);
                alert("Erro ao buscar o CEP.");
            }
        }

        document.addEventListener("DOMContentLoaded", () => {
            atualizarValor();
            const forma = document.querySelector('[name="FormaPagamento"]');
            if (forma) mostrarParcelas(forma.value);

            const userAgent = navigator.userAgent.toLowerCase();
            if (userAgent.includes("iphone") || userAgent.includes("ipad")) {
                document.body.classList.add("ios-device");
            } else if (userAgent.includes("android")) {
                document.body.classList.add("android-device");
            }

            const cpfCnpjInput = document.getElementById("cpfCnpj");
            if (cpfCnpjInput) {
                cpfCnpjInput.addEventListener("input", () => {
                    let val = cpfCnpjInput.value.replace(/\D/g, "");
                    if (val.length <= 11) {
                        val = val.replace(/(\d{3})(\d)/, "$1.$2").replace(/(\d{3})(\d)/, "$1.$2").replace(/(\d{3})(\d{1,2})$/, "$1-$2");
                    } else {
                        val = val.replace(/(\d{2})(\d)/, "$1.$2").replace(/(\d{3})(\d)/, "$1.$2").replace(/(\d{3})(\d{4})(\d{2})$/, "$1/$2-$3");
                    }
                    cpfCnpjInput.value = val;
                });
            }

            const validade = document.getElementById("validadeCartao");
            if (validade) {
                validade.addEventListener("input", () => {
                    let v = validade.value.replace(/[^\d]/g, "");
                    if (v.length >= 2) {
                        v = v.slice(0, 6).replace(/(\d{2})(\d{0,4})/, "$1/$2");
                    }
                    validade.value = v;
                });
            }

        });
    </script>
}